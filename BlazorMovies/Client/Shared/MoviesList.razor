@inject IJSRuntime js

<input type="checkbox" @bind="displayButtons" />


<GenericList List="Movies">
    <ElementTemplate Context="movie">
        <IndividualMovie Movie="movie" DisplayButtons="displayButtons" DeleteMovie="DeleteMovie" />
    </ElementTemplate>
</GenericList>

<Confirmation @ref="confirmation" OnCancel="onCancel" OnConfirm="onConfirm">
    <div>Do you want to delete @movieToDelete.Title?</div>
</Confirmation>

@code {
    Confirmation confirmation;
    [Parameter]
    public List<Movie> Movies { get; set; }


    bool displayButtons = false;

    Movie movieToDelete;

    private async Task DeleteMovie(Movie movie)
    {
        confirmation.Show();
        movieToDelete = movie;
        //await js.MyFunction("custom message");
        //var confirmed = await js.Confirm($"Are you sure you want to delete {movie.Title}?");
        //if (confirmed)
        //{
        //    Movies.Remove(movie);
        //}
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized. Movies.Count = "+Movies.Count.ToString());
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet. Movies.Count = " + Movies.Count.ToString());
    }
    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("OnAfterRender. FirstRender = " + firstRender.ToString());
    }

    protected override bool ShouldRender()
    {
        return true;
    }

    void onConfirm()
    {
        Movies.Remove(movieToDelete);
        confirmation.Hide();
        movieToDelete = null;
    }

    void onCancel()
    {
        confirmation.Hide();
        movieToDelete = null;
    }
}
